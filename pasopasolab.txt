



Crear cuenta en AWS

Instalar jenkins 

  Crear instanca ec2
      lanzo la instancia, y actualizo paquetes  sudo apt-get update
      instalo dependencia java 8 :   sudo apt install openjdk-8-jre-headless
      instalar jenkins
                  wget --no-check-certificate -qO - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
                  
                  echo deb https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list 
                  
                  sudo apt-get update
                  curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee \ /usr/share/keyrings/jenkins-keyring.asc > /dev/null
                  
                    echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
                    https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
                    /etc/apt/sources.list.d/jenkins.list > /dev/null
                  
                  sudo apt-get install jenkins 
                  
                  
                  sudo systemctl start jenkins


Instalar terraform
  sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
  
wget -O- https://apt.releases.hashicorp.com/gpg | \
gpg --dearmor | \
sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null

gpg --no-default-keyring \
--keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
--fingerprint


echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
sudo tee /etc/apt/sources.list.d/hashicorp.list


sudo apt update

sudo apt-get install terraform




------
1. 
creo un usuario de aws, le doy permiso de admin
creo las credenciales y las guardo
usuario: 

en terminal :  aws configure 
pego los datos de las credenciales 

2.creo el repositorio en github y lo pulleo a mi local

 git config --global user.name "John Ossa"
 git config --global user.email "johnalexossa@gmail.com"

 git clone https://github.com/kemado77/terraform-cicd.git


 3 .  creo la infra por medio de  terraform
    main.tf
    providers.tf  
    
    comandos principales de terraform 

      terraform init   // descarga plugins de api de aws, etc 
      terraform validate // para validar la definicion de la infra
      terraform plan // valida que componentes de aws se van a crear
      terraform apply -auto-approve  // subir los cambios a aws
      terraform destroy -auto-approve // para destriur los recursos aprovisionados

    -  creo un folder para modules y adentro otro para el  ecr
            dentro los archivos
                ecr.tf   // definicio del container registry
                outputs.tf  // salidas
                variables.tf  variables del container registry
    
     - creo un folder llamado WEB, para la imagen contenerizada de la pagina 
      
      - creo el DockerFile para la imagen 

     - entro a la consola al ecr y le doy "view push commands"


               y pego uno a uno en la consola y ejecuto
               
               1. Retrieve an authentication token and authenticate your Docker client to your registry. Use the AWS CLI:

               aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 339712868257.dkr.ecr.us-east-1.amazonaws.com

               2. Cree una imagen de Docker con el siguiente comando. Para obtener información sobre cómo crear un archivo de Docker desde cero, consulte las instrucciones aquí 
.              Puede omitir este paso si ya se creó la imagen:
                en la consola voy a la carpeta WEB  y ejecuto:   docker build -t ecr_repositorio .   para crear la imagen

              3. Cree una imagen de Docker con el siguiente comando. Para obtener información sobre cómo crear un archivo de Docker desde cero, consulte las instrucciones aquí 
.              Puede omitir este paso si ya se creó la imagen:

                docker tag ecr_repositorio:latest 339712868257.dkr.ecr.us-east-1.amazonaws.com/ecr_repositorio:latest

                4. Ejecute el siguiente comando para enviar esta imagen al repositorio de AWS recién creado:
                docker push 339712868257.dkr.ecr.us-east-1.amazonaws.com/ecr_repositorio:latest

      - VOy a la carpeta modules y creo una carpeta ecs 

             creo el archiv ecs.tf  // aca va la difinicion del cluster, la vpc, las zonas de disponbiilidad, la definicion de las tareas. definicion de politica l rol, 
                                      balanceador de carga, TARGET GROUP, LISTENER, SERVICIO 


               se crea el archivo variables.tf y se adicionan las variables usadas en el modulo
      
      - en el main.tf defino el modulo para el servicio ecs y loas variables a usar 

      - en el locals.tf agrego las variables conrrespondientes al nuevo modulo ecs

      terraform init  // para que adicione el nuevo modulo
      terraform validate // para validar la definicion de la infra


    








